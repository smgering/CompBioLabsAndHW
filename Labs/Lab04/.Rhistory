n <- n1
abundance <- print(n)
abundance <- c(n)
plot(n)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
print(t)
print(n)
for (t in 1:12) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance <- print(n)
abundance <- c(n)
plot(n)
}
time <- c(t)
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (t in 1:12) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(n)
}
#7 Redoing question for, but storing data and plotting within the loop
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (t in 1:12(time)) {
for(n in 1:10000(abundance)){
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
plot <- c(time, abundance)  }
}
for (i1 in 1:12(time)) {
for(i2 in 1:10000(abundance)){
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
plot <- c(time, abundance)  }
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i1 in 1:12(time)) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
plot <- c(time, abundance)  }
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
plot <- c(time, abundance)  }
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
plot <- c(time, abundance)  }
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
plot <- c(time, abundance)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
print(paste(n))
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(paste(n))
plot <- c(time, abundance)
}
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(paste(n))
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(paste(n))
}
i
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(paste(n))
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
list <- print(list(n))
}
list
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
list(n)
}
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
list(n)
}
list
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(n)
}
time <- 1:12
t <- 12
n <- 2500
K <- 10000
r <-  0.8
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
plot(time, abundance)
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance <- c(n)
}
abundance
setwd("~/Documents/Classes/EBIO5420/CompBioLabsAndHW/Labs/Lab05")
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(n)
write.csv(x = n, file = "abundance.csv")
}
setwd("~/Documents/Classes/EBIO5420/CompBioLabsAndHW/Labs/Lab04")
write.csv(x =abundance, file = "abundance.csv")
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(x =abundance, file = "abundance.csv")
write.csv(n = abundance, t = time, file = "abundance_time.csv")
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
plot(time, abundance)
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(paste(n))
}
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(n = abundance, t = time, file = "abundance_time.csv")
write.csv(n = abundance, time, file = "abundance_time.csv")
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(n = abundance, file = "abundance.csv")
write.csv(y = abundance, x = time, file = "abundance.csv")
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(y = abundance, x = time, file = "abundance.csv")
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(x = time, y = abundance, file = "abundance.csv")
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
dfrm <- data.frame(n)
write.table(dfrm, file = "abundance.csv")
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(n)
write.table(n, file = "abundance.csv")
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(n)
}
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(time, abundance, file = "abundance.csv")
write.csv(x = abundance, file = "abundance.csv")
plot(time, abundance)
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
write.csv(x = abundance, file = "abundance.csv")
write.csv(x = time, file = "time.csv")
plot(time, abundance)
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = t(1:12)
print(n)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = t(1:12)
print(n)
}
abundance
time
time = c(1:12)
time
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
print(n)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
print(n)
}
for(i in 2:130) {
y=test3[i,3:52]
z=as.numeric(y)
abundance = print(n)
st_dev = sd(z) }
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
print(n)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
print(n)
}
abundance
time
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
plot(time, abundance)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
plot(time, abundance)
}
for (hi in 1:10) {
print ("hi")
}
piggyBank <- 10 # dollars
allowance <- 5 # dollars per week
gumCost <- 2 * 1.34 # cost of 2 packs of gum per week
weeks <- 8 # timeframe
x <- (piggyBank + allowance - gumCost)
for (i in 1:weeks) {
newBalance <- piggyBank + allowance - gumCost
piggyBank <- newBalance
print( newBalance )
}
currentpop <- 2000
shrink <- 0.05
years <- 7
shrinkamount <- (currentpop * shrink)
newpop <- (currentpop - shrinkamount)
for (i in 1:years) {
newpop <- currentpop - (currentpop * shrink)
currentpop <- newpop
print( currentpop )
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
print(n)
}
i <- rep(0, 18)
i
for ( i in seq (1,18) ) {
i <- ( i * 3 )
print( i )
}
#Or
x <- 0
for ( i in seq(1,18) ) {
x <- ( x + 3 )
print( x )
}
#Or another way to answer 5b
x <- 0
for ( i in seq(1,18) ) {
x <- ( x + 3 )
print( x )
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in seq(1,18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i3)
}
for ( i in seq(1,18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in seq(1,18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in seq(1,18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in seq(1,18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in seq(1:18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in rep(1:18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
#Or another way to answer 5b
x <- 0
for ( i in seq(1,18) ) {
x <- ( x + 3 )
print( x )
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in rep(1:18) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in rep(0:i2) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in rep(0,i2) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in seq(i2) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
for ( i in seq(i2,1) ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
for ( i in i2 ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
i2
i2 <- rep(0, 18)
for ( i in i2 ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
i2 <- rep(0, 18)
i2[1] <- 1
for ( i in i2 ) {
i3 <- (1 + (2 * i2))
i2 <- i3
print(i2)
}
Ft <- rep(0, 20)
F1 <- 0
F2 <- 1
F3 <- (F1 + F2)
for ( Ft in 1:20 ) {
F3 <- F1 + F2
F1 <- F2
F2 <- F3
print(F3)
}
t <- 12
n <- 2500
K <- 10000
r <-  0.8
for (i in 1:t) {
n1 <- ((n + ((r * n) * ((K - n) / K ))))
n <- n1
abundance = print(n)
time = c(1:12)
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
plot(time, abundance)
}
time <- 1:12
abundance <- c(4000, 5920, 7852.288, 9201.444, 9789.274, 9954.302, 9990.693, 9998.132, 9999.626, 9999.925, 9999.985, 9999.997)
plot(time, abundance)
